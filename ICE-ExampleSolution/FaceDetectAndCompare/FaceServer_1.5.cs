// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `FaceServer_1.5.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace FaceRecognitionModule
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface ConnectionListener : Ice.Object, ConnectionListenerOperations_, ConnectionListenerOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface FaceRecognition : Ice.Object, FaceRecognitionOperations_, FaceRecognitionOperationsNC_
    {
    }
}

namespace FaceRecognitionModule
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_ConnectionListener_onRecv();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_FaceRecognition_send(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_FaceRecognition_initConnectionListener();
}

namespace FaceRecognitionModule
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface ConnectionListenerPrx : Ice.ObjectPrx
    {
        void onRecv(string xmlContent);

        void onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<FaceRecognitionModule.Callback_ConnectionListener_onRecv> begin_onRecv(string xmlContent);

        Ice.AsyncResult<FaceRecognitionModule.Callback_ConnectionListener_onRecv> begin_onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_onRecv(string xmlContent, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_onRecv(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface FaceRecognitionPrx : Ice.ObjectPrx
    {
        string send(string xml);

        string send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_send> begin_send(string xml);

        Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_send> begin_send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_send(string xml, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_send(Ice.AsyncResult r__);

        void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener);

        void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener> begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener);

        Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener> begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_initConnectionListener(Ice.AsyncResult r__);
    }
}

namespace FaceRecognitionModule
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface ConnectionListenerOperations_
    {
        void onRecv(string xmlContent, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface ConnectionListenerOperationsNC_
    {
        void onRecv(string xmlContent);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface FaceRecognitionOperations_
    {
        string send(string xml, Ice.Current current__);

        void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface FaceRecognitionOperationsNC_
    {
        string send(string xml);

        void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener);
    }
}

namespace FaceRecognitionModule
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class ConnectionListenerPrxHelper : Ice.ObjectPrxHelperBase, ConnectionListenerPrx
    {
        #region Synchronous operations

        public void onRecv(string xmlContent)
        {
            this.onRecv(xmlContent, null, false);
        }

        public void onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            this.onRecv(xmlContent, ctx__, true);
        }

        private void onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            end_onRecv(begin_onRecv(xmlContent, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<FaceRecognitionModule.Callback_ConnectionListener_onRecv> begin_onRecv(string xmlContent)
        {
            return begin_onRecv(xmlContent, null, false, false, null, null);
        }

        public Ice.AsyncResult<FaceRecognitionModule.Callback_ConnectionListener_onRecv> begin_onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_onRecv(xmlContent, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_onRecv(string xmlContent, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_onRecv(xmlContent, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_onRecv(xmlContent, ctx__, true, false, cb__, cookie__);
        }

        private const string __onRecv_name = "onRecv";

        public void end_onRecv(Ice.AsyncResult r__)
        {
            end__(r__, __onRecv_name);
        }

        private Ice.AsyncResult<FaceRecognitionModule.Callback_ConnectionListener_onRecv> begin_onRecv(string xmlContent, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<FaceRecognitionModule.Callback_ConnectionListener_onRecv> result__ = getOnewayOutgoingAsync<FaceRecognitionModule.Callback_ConnectionListener_onRecv>(__onRecv_name, onRecv_completed__, cookie__);
            if (cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__onRecv_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(xmlContent);
                result__.endWriteParams();
                result__.invoke();
            }
            catch (Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void onRecv_completed__(FaceRecognitionModule.Callback_ConnectionListener_onRecv cb__)
        {
            if (cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static ConnectionListenerPrx checkedCast(Ice.ObjectPrx b)
        {
            if (b == null)
            {
                return null;
            }
            ConnectionListenerPrx r = b as ConnectionListenerPrx;
            if ((r == null) && b.ice_isA(ice_staticId()))
            {
                ConnectionListenerPrxHelper h = new ConnectionListenerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ConnectionListenerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if (b == null)
            {
                return null;
            }
            ConnectionListenerPrx r = b as ConnectionListenerPrx;
            if ((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ConnectionListenerPrxHelper h = new ConnectionListenerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ConnectionListenerPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if (b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if (bb.ice_isA(ice_staticId()))
                {
                    ConnectionListenerPrxHelper h = new ConnectionListenerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch (Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ConnectionListenerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if (b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if (bb.ice_isA(ice_staticId(), ctx))
                {
                    ConnectionListenerPrxHelper h = new ConnectionListenerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch (Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ConnectionListenerPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if (b == null)
            {
                return null;
            }
            ConnectionListenerPrx r = b as ConnectionListenerPrx;
            if (r == null)
            {
                ConnectionListenerPrxHelper h = new ConnectionListenerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ConnectionListenerPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if (b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ConnectionListenerPrxHelper h = new ConnectionListenerPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::FaceRecognitionModule::ConnectionListener",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, ConnectionListenerPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ConnectionListenerPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if (proxy != null)
            {
                ConnectionListenerPrxHelper result = new ConnectionListenerPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class FaceRecognitionPrxHelper : Ice.ObjectPrxHelperBase, FaceRecognitionPrx
    {
        #region Synchronous operations

        public void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener)
        {
            this.initConnectionListener(listener, null, false);
        }

        public void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            this.initConnectionListener(listener, ctx__, true);
        }

        private void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            end_initConnectionListener(begin_initConnectionListener(listener, context__, explicitCtx__, true, null, null));
        }

        public string send(string xml)
        {
            return this.send(xml, null, false);
        }

        public string send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.send(xml, ctx__, true);
        }

        private string send(string xml, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__send_name);
            return end_send(begin_send(xml, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener> begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener)
        {
            return begin_initConnectionListener(listener, null, false, false, null, null);
        }

        public Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener> begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_initConnectionListener(listener, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_initConnectionListener(listener, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_initConnectionListener(listener, ctx__, true, false, cb__, cookie__);
        }

        private const string __initConnectionListener_name = "initConnectionListener";

        public void end_initConnectionListener(Ice.AsyncResult r__)
        {
            end__(r__, __initConnectionListener_name);
        }

        private Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener> begin_initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener> result__ = getOnewayOutgoingAsync<FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener>(__initConnectionListener_name, initConnectionListener_completed__, cookie__);
            if (cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__initConnectionListener_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                FaceRecognitionModule.ConnectionListenerPrxHelper.write__(os__, listener);
                result__.endWriteParams();
                result__.invoke();
            }
            catch (Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void initConnectionListener_completed__(FaceRecognitionModule.Callback_FaceRecognition_initConnectionListener cb__)
        {
            if (cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_send> begin_send(string xml)
        {
            return begin_send(xml, null, false, false, null, null);
        }

        public Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_send> begin_send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_send(xml, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_send(string xml, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_send(xml, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_send(xml, ctx__, true, false, cb__, cookie__);
        }

        private const string __send_name = "send";

        public string end_send(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __send_name);
            try
            {
                if (!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch (Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                string ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = is__.readString();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<FaceRecognitionModule.Callback_FaceRecognition_send> begin_send(string xml, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__send_name);
            IceInternal.TwowayOutgoingAsync<FaceRecognitionModule.Callback_FaceRecognition_send> result__ = getTwowayOutgoingAsync<FaceRecognitionModule.Callback_FaceRecognition_send>(__send_name, send_completed__, cookie__);
            if (cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__send_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(xml);
                result__.endWriteParams();
                result__.invoke();
            }
            catch (Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void send_completed__(Ice.AsyncResult r__, FaceRecognitionModule.Callback_FaceRecognition_send cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_send(r__);
            }
            catch (Ice.Exception ex__)
            {
                if (excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if (cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static FaceRecognitionPrx checkedCast(Ice.ObjectPrx b)
        {
            if (b == null)
            {
                return null;
            }
            FaceRecognitionPrx r = b as FaceRecognitionPrx;
            if ((r == null) && b.ice_isA(ice_staticId()))
            {
                FaceRecognitionPrxHelper h = new FaceRecognitionPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static FaceRecognitionPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if (b == null)
            {
                return null;
            }
            FaceRecognitionPrx r = b as FaceRecognitionPrx;
            if ((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                FaceRecognitionPrxHelper h = new FaceRecognitionPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static FaceRecognitionPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if (b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if (bb.ice_isA(ice_staticId()))
                {
                    FaceRecognitionPrxHelper h = new FaceRecognitionPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch (Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static FaceRecognitionPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if (b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if (bb.ice_isA(ice_staticId(), ctx))
                {
                    FaceRecognitionPrxHelper h = new FaceRecognitionPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch (Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static FaceRecognitionPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if (b == null)
            {
                return null;
            }
            FaceRecognitionPrx r = b as FaceRecognitionPrx;
            if (r == null)
            {
                FaceRecognitionPrxHelper h = new FaceRecognitionPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static FaceRecognitionPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if (b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            FaceRecognitionPrxHelper h = new FaceRecognitionPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::FaceRecognitionModule::FaceRecognition",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, FaceRecognitionPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static FaceRecognitionPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if (proxy != null)
            {
                FaceRecognitionPrxHelper result = new FaceRecognitionPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace FaceRecognitionModule
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public abstract class ConnectionListenerDisp_ : Ice.ObjectImpl, ConnectionListener
    {
        #region Slice operations

        public void onRecv(string xmlContent)
        {
            onRecv(xmlContent, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void onRecv(string xmlContent, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ =
        {
            "::FaceRecognitionModule::ConnectionListener",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus onRecv___(ConnectionListener obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string xmlContent;
            xmlContent = is__.readString();
            inS__.endReadParams();
            obj__.onRecv(xmlContent, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "onRecv"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if (pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch (pos)
            {
                case 0:
                    {
                        return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                    }
                case 1:
                    {
                        return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                    }
                case 2:
                    {
                        return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                    }
                case 3:
                    {
                        return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                    }
                case 4:
                    {
                        return onRecv___(this, inS__, current__);
                    }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public abstract class FaceRecognitionDisp_ : Ice.ObjectImpl, FaceRecognition
    {
        #region Slice operations

        public string send(string xml)
        {
            return send(xml, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string send(string xml, Ice.Current current__);

        public void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener)
        {
            initConnectionListener(listener, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void initConnectionListener(FaceRecognitionModule.ConnectionListenerPrx listener, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ =
        {
            "::FaceRecognitionModule::FaceRecognition",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus send___(FaceRecognition obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string xml;
            xml = is__.readString();
            inS__.endReadParams();
            string ret__ = obj__.send(xml, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeString(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus initConnectionListener___(FaceRecognition obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            FaceRecognitionModule.ConnectionListenerPrx listener;
            listener = FaceRecognitionModule.ConnectionListenerPrxHelper.read__(is__);
            inS__.endReadParams();
            obj__.initConnectionListener(listener, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "initConnectionListener",
            "send"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if (pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch (pos)
            {
                case 0:
                    {
                        return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                    }
                case 1:
                    {
                        return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                    }
                case 2:
                    {
                        return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                    }
                case 3:
                    {
                        return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                    }
                case 4:
                    {
                        return initConnectionListener___(this, inS__, current__);
                    }
                case 5:
                    {
                        return send___(this, inS__, current__);
                    }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }
}
